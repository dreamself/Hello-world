Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note: The solution set must not contain duplicate triplets.

For example, given array S = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]


public class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        Arrays.sort(nums);
        int low = 0;
        int high = 0;
        for (int i = 0; i < nums.length - 2; ++i){  
            low = i+1;
            high = nums.length - 1;
            while(low < high){    
                if ((nums[low] + nums[high] + nums[i]) == 0){
                    result.add(Arrays.asList(nums[low],nums[high],nums[i]));
                    while(low < high && nums[low+1] == nums[low]) ++low;
                    while(low < high && nums[high-1] == nums[high]) --high;
                    ++low;
                    --high;
                }
                else if (nums[low] + nums[high] + nums[i] > 0){
                    --high;
                }
                else{
                    ++low;
                }                                            
            }  
            while(i+1 < nums.length && nums[i+1] == nums[i]){
                ++i;
            }
        }
        return result;
    }
}
